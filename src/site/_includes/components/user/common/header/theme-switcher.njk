<label for="themeSwitcher">Theme:</label>
<select id="themeSwitcher"><option value="">Loading...</option></select>

<script type="text/javascript">
    // Find the tag linking the css theme
    function findThemeLink() {
        const linkElements = document.head.getElementsByTagName('link');

        for (let i = 0; i < linkElements.length; i++) {
            const link = linkElements[i];

            if (link.href && link.href.includes('_theme.')) {
                return link;
            }
        }

        return null;
    }
    function setStyle(themeUrl) {
        if (!themeLink)
            return;

        themeLink.href = themeUrl;
    }
    function dropdownChange(event) {
        const selectedValue = event.target.value;
        setStyle(selectedValue);
    }
    function populateDropdown(themes) {
        const dropdown = document.getElementById('themeSwitcher');
        if (!dropdown)
        {
            console.error("Theme switcher could not find dropdown element to fill with themes. Should be at the top of theme-switcher.njk...");
            return;
        }

        // remove previous option elements
        dropdown.innerHTML = '';

        // using https://raw.githack.com/ to convert raw github files to proper served css files
        themes.forEach(theme => {
            const option = document.createElement('option');
            option.value = `https://raw.githack.com/${x.repo}/${theme.branch || "HEAD"}/${theme.legacy ? "obsidian.css" : "theme.css"}`;
            option.textContent = theme.name;
            dropdown.appendChild(option);
        });

        // remove previous listener if this is called multiple times (for example manually for testing)
        dropdown.removeEventListener('change', dropdownChange);
        dropdown.addEventListener('change', dropdownChange);
    }
    // Get json file contents from the web
    async function fetchThemes(url, updateCall) {
        try {
            const response = await fetch(url);
            if (!response.ok) {
                throw new Error('Failed to fetch ' + url + ' - Network response was not ok: ' + response.statusText);
            }
            const data = await response.json();
            updateCall(data);
        } catch (error) {
            console.error('Failed to fetch ' + url + ' - There was a problem with the fetch operation:', error);
        }
    }

    const themeLink = findThemeLink();
    if (!themeLink)
    {
        console.error("Theme switcher could not find link-tag with theme file and will not work. Maybe something changed in the template? (theme-switcher.njk is looking for a link tag with a href value containing '_theme.')");
    }

    fetchThemes("https://raw.githubusercontent.com/obsidianmd/obsidian-releases/master/community-css-themes.json", populateDropdown);
</script>