<label for="themeSwitcher">Choose theme:</label>
<select id="themeSwitcher"></select>

<script type="text/javascript">
    // Find the tag linking the css theme
    function findThemeLink() {
        const linkElements = document.head.getElementsByTagName('link');

        for (let i = 0; i < linkElements.length; i++) {
            const link = linkElements[i];

            if (link.href && link.href.includes('_theme.')) {
                return link;
            }
        }

        return null;
    }

    const themeLink = findThemeLink();
    if (!themeLink)
    {
        console.error("Theme switcher could not find link-tag with theme file and will not work. Maybe something changed in the template? (theme-switcher.njk is looking for a link tag with a href value containing '_theme.')");
    }
    
    function setStyle(themeUrl) {
        if (!themeLink)
            return;

        themeLink.href = themeUrl;
    }
    function dropdownChange(event) {
        const selectedValue = event.target.value;
        // using https://raw.githack.com/ to convert raw github files to proper served css files
        selectedValue.replace('raw.githubusercontent.com', 'rawcdn.githack.com');
        setStyle(selectedValue);
    }

    const themeList = [
        ['Atom', 'https://raw.githubusercontent.com/kognise/obsidian-atom/HEAD/theme.css'],
        ['AnuPpuccin', 'https://raw.githubusercontent.com/AnubisNekhet/AnuPpuccin/HEAD/theme.css'],
        ['Minimal', 'https://raw.githubusercontent.com/kepano/obsidian-minimal/HEAD/theme.css'],
        ['Gruvbox', 'https://raw.githubusercontent.com/insanum/obsidian_gruvbox/HEAD/theme.css']
    ];
    function populateDropdown(options) {
        const dropdown = document.getElementById('themeSwitcher');
        if (!dropdown || !themeList)
        {
            console.error("Theme switcher could not find dropdown element to fill with themes. Should be at the top of theme-switcher.njk...");
            return;
        }
        
        dropdown.innerHTML = '';

        options.forEach(value => {
            const option = document.createElement('option');
            option.value = value[1];
            option.textContent = value[0];
            dropdown.appendChild(option);
        });
        
        dropdown.addEventListener('change', dropdownChange);
    }
    // Calling it as a function, to not clutter global object list
    populateDropdown(themeList);
</script>